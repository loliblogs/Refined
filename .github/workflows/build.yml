name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version: 'lts/*'
          package-manager-cache: false

      # 手动管理 pnpm store 缓存以启用增量复用
      # setup-node 的 package-manager-cache 不支持 restore-keys，
      # 导致依赖更新时 cache key 变化，必须全部重新下载。
      # 使用 restore-keys 可以复用旧缓存，pnpm 只需增量下载变更的包。
      - name: Get pnpm store path
        run: echo PNPM_STORE_PATH=$(pnpm store path --silent) >> "$GITHUB_ENV"

      - uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-cache-production-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: pnpm-cache-production-${{ runner.os }}-${{ runner.arch }}-

      - uses: actions/cache@v4
        with:
          path: |
            .astro
            .cache
          key: astro-build-${{ github.sha }}
          restore-keys: astro-build-

      - run: pnpm install --frozen-lockfile --production
      - run: pnpm build
        env:
          ASTRO_DB_REMOTE_URL: ${{ secrets.ASTRO_DB_REMOTE_URL }}
          SECRET_ENCRYPTION_PASSWORD: ${{ secrets.SECRET_ENCRYPTION_PASSWORD }}
          SECRET_ENCRYPTION_SALT: ${{ secrets.SECRET_ENCRYPTION_SALT }}
          SECRET_PASSWORDS: ${{ secrets.SECRET_PASSWORDS }}

      - name: Setup SSH for signing and pushing
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keygen -y -f ~/.ssh/id_ed25519 > ~/.ssh/id_ed25519.pub

          # Trust remote hosts
          ssh-keyscan github.com gitlab.com bitbucket.org >> ~/.ssh/known_hosts

          # Configure SSH signing
          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/id_ed25519.pub
          git config --global commit.gpgsign true

          # Configure git
          git config --global init.defaultBranch main

      - name: Deploy to Domestic VPS
        uses: burnett01/rsync-deployments@7.1.0
        id: domestic
        with:
          remote_host: "speedtest.lolifamily.js.org"
          remote_port: 22022
          remote_user: "root"
          remote_path: "/var/www/html/loliblogs"
          remote_key: ${{ secrets.SSH_KEY }}
          path: "dist/*"
          switches: -avzr --delete --no-owner --no-group
        continue-on-error: true

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        id: cloudflare_workers
        run: pnpm online:workers
        continue-on-error: true

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        id: cloudflare_pages
        run: pnpm online:pages
        continue-on-error: true

      - name: Deploy to Vercel
        id: vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: pnpm online:vercel --token ${{ secrets.VERCEL_TOKEN }}
        continue-on-error: true

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        id: netlify
        run: pnpm online:netlify
        continue-on-error: true

      - name: Deploy to Git platforms
        working-directory: dist
        run: |
          git init
          git config user.name "Lolifamily Deploy Bot"
          git config user.email "lolifamilies+ci@gmail.com"

          git remote add github git@github.com:loliblogs/loliblogs.github.io.git
          git remote add gitlab git@gitlab.com:loliblogs/loliblogs.gitlab.io.git
          git remote add bitbucket git@bitbucket.org:loliblogs/loliblogs.bitbucket.io.git

          (git fetch --depth=1 github main && git reset --soft FETCH_HEAD) || git checkout -b main
          git add -A
          git commit --allow-empty -S -m "Deploy $(date -u +%Y-%m-%dT%H:%M:%SZ)"
        
      - name: Push to Github
        id: github
        working-directory: dist
        run: git push -f github main
        continue-on-error: true
      - name: Push to Gitlab
        id: gitlab
        working-directory: dist
        run: git push -f gitlab main
        continue-on-error: true
      - name: Push to Bitbucket
        id: bitbucket
        working-directory: dist
        run: git push -f bitbucket main
        continue-on-error: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

      # Disabled Netlify detection because we were frequently hitting its rate limits.
      - name: Exit with error if any step failed
        if: |
          steps.domestic.outcome != 'success' || steps.cloudflare_workers.outcome != 'success' ||
          steps.cloudflare_pages.outcome != 'success' || steps.vercel.outcome != 'success' ||
          steps.github.outcome != 'success' || steps.gitlab.outcome != 'success' ||
          steps.bitbucket.outcome != 'success'
        run: exit 1
