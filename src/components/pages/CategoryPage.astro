---
/**
 * 分类页面组件 - 支持多collection
 * 完全兼容原始[...path].astro的行为
 */
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getCategorySystem } from '@/utils/data-loader';
import { getCategoryUrl, getCategoryIndexUrl } from '@/utils/collection-paths';
import PostList from '../PostList.astro';
import PaginationNav from '../PaginationNav.astro';

import type { CollectionName } from '@/types/content';
import type { Post, Category } from '@/types/content';

interface Props {
  category: Category;
  posts: Post[];
  ancestors: Category[];
  subcategories: Category[];  // 子分类
  currentPage: number;
  lastPage: number;
  collection?: CollectionName;
}

const {
  category,
  posts,
  ancestors,
  subcategories,
  currentPage,
  lastPage,
  collection = 'post',
} = Astro.props;

// 获取同级分类
const categorySystem = await getCategorySystem(collection);
const siblingCategories = categorySystem.getSiblings(category.path).slice(0, 5);

// 页面上下文
const pageContext = {
  path: getCategoryUrl(category.path, collection),
  layoutType: 'category' as const,
  collection,
};

// 生成标题
const pageTitle = `分类: ${category.name}`;
---

<BaseLayout
  title={pageTitle}
  description={`查看"${category.name}"分类下的所有文章`}
  pageContext={pageContext}
>
  {/* 分类标题 */}
  <header class="mb-8">
    <h1 class="mb-2 text-3xl font-bold">
      分类:
      {' '}
      {category.name}
    </h1>
    {/* 显示直接属于该分类的文章数（不包含子分类）
        使用 postIds.size 表示直接文章数，count 表示包含子分类的总数 */}
    <p class="text-secondary">
      共
      {' '}
      {category.postIds.size}
      {' '}
      篇文章
    </p>

    {/* 面包屑导航 */}
    {ancestors.length > 0 && (
      <nav class="mt-4 text-sm">
        <a href={getCategoryIndexUrl(collection)} class="text-link">
          <span class="hover:underline">所有分类</span>
        </a>
        {ancestors.map(ancestor => (
          <>
            <span class="mx-2">/</span>
            <a
              href={getCategoryUrl(ancestor.path, collection)}
              class="text-link"
            >
              <span class="hover:underline">{ancestor.name}</span>
            </a>
          </>
        ))}
        <span class="mx-2">/</span>
        <span class="text-primary">{category.name}</span>
      </nav>
    )}

  </header>

  {/* 子分类 */}
  {subcategories.length > 0 && (
    <section class="mb-8">
      <h2 class="mb-4 text-xl font-bold">子分类</h2>
      <div class={`
        grid grid-cols-4 gap-4
        max-lg:grid-cols-2
      `}
      >
        {subcategories.map(child => (
          <a
            href={getCategoryUrl(child.path, collection)}
            class={`
              rounded border p-4 transition
              hover:bg-hover
            `}
          >
            <h3 class="font-semibold">{child.name}</h3>
            {/* 子分类显示包含其子分类的总文章数 */}
            <p class="text-sm text-secondary">
              {child.count}
              {' '}
              篇文章
            </p>
          </a>
        ))}
      </div>
    </section>
  )}

  {/* 文章列表 */}
  <main class="mb-8">
    <PostList posts={posts} collection={collection} />

    {/* 分页 */}
    <PaginationNav
      currentPage={currentPage}
      lastPage={lastPage}
      baseUrl={getCategoryUrl(category.path, collection)}
    />
  </main>

  {/* 相关分类 */}
  {siblingCategories.length > 0 && (
    <aside>
      <h2 class="mb-4 text-xl font-bold">同级分类</h2>
      <div class="flex flex-wrap gap-2">
        {siblingCategories.map(sibling => (
          <a
            href={getCategoryUrl(sibling.path, collection)}
            class={`
              rounded border px-3 py-1 transition
              hover:bg-hover
            `}
          >
            {sibling.name}
            {' '}
            (
            {sibling.count}
            )
          </a>
        ))}
      </div>
    </aside>
  )}
</BaseLayout>
